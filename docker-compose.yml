version: '3.9'

services:
  # development 
  boardso-api-dev:
    container_name: boardso-api-dev
    image: egofori/boardso-api-dev:1.0.0
    build:
      context: .
      target: dev
    restart: always
    ports:
      - '3333:3333'
    env_file:
      - ./.env.local
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      boardso-postgres-dev:
        condition: service_healthy
  boardso-postgres-dev:
    container_name: boardso-postgres-dev
    image: postgres:16
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./.env.local
    volumes:
      - boardso-db-data-dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # staging 
  boardso-api-staging:
    container_name: boardso-api-staging
    image: egofori/boardso-api-staging:1.0.0
    build:
      context: .
      target: staging
    restart: always
    ports:
      - '3334:3333'
    env_file:
      - ./.env.staging
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      boardso-postgres-staging:
        condition: service_healthy
  boardso-postgres-staging:
    container_name: boardso-postgres-staging
    image: postgres:16
    restart: always
    ports:
      - 5433:5432
    env_file:
      - ./.env.staging
    volumes:
      - boardso-db-data-staging:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
        
  # production
  boardso-api:
    container_name: boardso-api
    image: egofori/boardso-api:1.0.0
    build:
      context: .
      target: prod
    restart: always
    ports:
      - '3333:3333'
    env_file:
      - ./.env
    depends_on:
      boardso-postgres:
        condition: service_healthy
  boardso-postgres:
    container_name: boardso-postgres
    image: postgres:16
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./.env
    volumes:
      - boardso-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  # production
  boardso-db-data:
    name: boardso-db-data
  # staging
  boardso-db-data-staging:
    name: boardso-db-data-staging
  # development
  boardso-db-data-dev:
    name: boardso-db-data-dev
  
